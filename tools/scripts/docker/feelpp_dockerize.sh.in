#!/bin/bash

set -eo pipefail
#set -x

# default values
TARGET=ubuntu:16.10
BRANCH=master
URL=https://www.github.com/feelpp/
FEELPP_BRANCH=develop
BUILD_JOBS=10
FROM=feelpp/feelpp-base
FEELPP_DIR=@CMAKE_INSTALL_PREFIX@
CMAKE_FLAGS=""

for i in "$@"
do
    case $i in
        -p=*|--project=*)
            PROJECT="${i#*=}"
            shift # past argument=value
            ;;
        -t=*|--target=*)
            TARGET="${i#*=}"
            shift # past argument=value
            ;;
        -b=*|--branch=*)
            BRANCH="${i#*=}"
            shift # past argument=value
            ;;
        -f=*|--from=*)
            FROM="${i#*=}"
            shift # past argument=value
            ;;
        --feelpp-branch=*)
            FEELPP_BRANCH="${i#*=}"
            shift # past argument=value
            ;;
        -j=*|--jobs=*)
            BUILD_JOBS="${i#*=}"
            shift # past argument=value
            ;;
        -c=*|--cmake-flags=*)
            CMAKE_FLAGS="${i#*=}"
            shift # past argument=value
            ;;
        -d=*|--feelpp-dir=*)
            FEELPP_DIR="${i#*=}"
            shift # past argument=value
            ;;                       
        *)
            # unknown option
            ;;
    esac
done

echo "PROJECT=${PROJECT}"
echo "TARGET=${TARGET}"
echo "BRANCH=${BRANCH}"
echo "URL=${URL}"
echo "FROM=${FROM}"
echo "FEELPP_BRANCH=${FEELPP_BRANCH}"
echo "BUILD_JOBS=${BUILD_JOBS}"
echo "CMAKE_FLAGS=${CMAKE_FLAGS}"
echo "FEELPP_DIR=${FEELPP_DIR}"


# Combines a dockerfile template with a generated FROM line
dockerfile_from() {
    local dockerfile="$1"
    local from="$2"
    printf 'FROM %s\n%s' "$from" "$(<$dockerfile)"
}

tag_from_target() {
    splitfrom=(`echo "$1" | tr ":" "\n"`)
    fromos=${splitfrom[0]}
    fromtag=${splitfrom[1]}

    $FEELPP_DIR/share/feelpp/scripts/list.sh | grep "$2-${fromos}-${fromtag}"  | while read line ; do
        tokens=($line)
        image=${tokens[0]}
        printf "%s" "$image" 
    done
}
extratags_from_target() {
    splitfrom=(`echo "$1" | tr ":" "\n"`)
    fromos=${splitfrom[0]}
    fromtag=${splitfrom[1]}

    $FEELPP_DIR/share/feelpp/scripts/list.sh | grep "$2-${fromos}-${fromtag}"  | while read line ; do
        tokens=($line)
        extratags=${tokens[@]:5}
        printf "%s" "${extratags}" 
    done
}

tag=$(tag_from_target $TARGET $BRANCH)
echo "tag: $tag"
basetag=$(tag_from_target $TARGET $FEELPP_BRANCH)
echo "basetag: $basetag" 
echo "--- Building $PROJECT:${tag}"

mkdir -p docker
cp ${FEELPP_DIR}/bin/feelpp_build.sh docker/
dockerfile_from "${FEELPP_DIR}/share/feelpp/docker/Dockerfile.template" "${FROM}:${basetag}" > docker/dockerfile.tmp

${ECHO} docker build \
       --tag=feelpp/$PROJECT:${tag} \
       --build-arg=BUILD_JOBS="${BUILD_JOBS}"\
       --build-arg=URL="${URL}"\
       --build-arg=BRANCH="${BRANCH}"\
       --build-arg=PROJECT="${PROJECT}"\
       --build-arg=GITHUB_OAUTH=${GITHUB_OAUTH}\
       --build-arg=CMAKE_FLAGS="${CMAKE_FLAGS}"\
       --build-arg=CXX="${CXX}"\
       --build-arg=CC="${CC}" \
       --no-cache=true \
       -f docker/dockerfile.tmp \
       docker


# if [ "${BRANCH}" = "master" ]; then
#     echo "--- Tagging $PROJECT:${tag}"
#     extratags=`extratags_from_target $TARGET $BRANCH`
#     # add extra tags
#     for tagalias in ${extratags[@]}; do
#         echo "Tagging feelpp/$PROJECT:$tag as feelpp/$PROJECT:$tagalias"
#         ${ECHO} docker tag "feelpp/$PROJECT:$tag" "feelpp/$PROJECT:$tagalias"
#         ${ECHO} docker push feelpp/$PROJECT:$tagalias
#     done
# fi
