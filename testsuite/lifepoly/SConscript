# -*- Mode: python -*-
###  SConscript ---

#  Author(s): Christophe Prud'homme <christophe.prudhomme@epfl.ch>
#       Date: 2006-05-26
#
#  Copyright (C) 2006 EPFL
#
# Distributed under the GPL(GNU Public License):
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#

Import('env')

libpath=['../../life/lifecore/', '../../life']
libs=['lifemesh',
      'lifealg',
      'lifecore',
      'lifeinfo',
      env['LIBS']]

theLIBPATH=[
    '../../life',
    '../../life/lifecore/',
    '../../life/lifealg/',
    '../../life/lifemesh/',
    ]
if 'test' in COMMAND_LINE_TARGETS or 'testpoly' in COMMAND_LINE_TARGETS:
    test_jacobi = env.Program('test_jacobi','test_jacobi.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_im = env.Program('test_im','test_im.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_qm_qk = env.Program('test_qm_qk','test_qm_qk.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_qm_pk = env.Program('test_qm_pk','test_qm_pk.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_qm_qk_3D = env.Program('test_qm_qk_3D','test_qm_qk_3D.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_qm_pk_3D = env.Program('test_qm_pk_3D','test_qm_pk_3D.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_qm_pk_double = env.Program('test_qm_pk_double','test_qm_pk_double.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
#    test_spectral_1D = env.Program('test_spectral_1D','test_spectral_1D.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
#    test_spectral_2D = env.Program('test_spectral_2D','test_spectral_2D.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    # env.Program('test_spectral_3D','test_spectral_3D.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    # env.Program('test_spectral_laplacian_3D','test_spectral_laplacian_3D.cpp',LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)
    test_lag = env.Program('test_lag','test_lag.cpp', CPPPATH=[env['CPPPATH'], '.'], LIBS=[libs, '-lboost_unit_test_framework'],LIBPATH=theLIBPATH)

    env.Test( 'test.passed',
              [test_jacobi,
               test_im,
               test_qm_qk,
               test_qm_pk,
               test_qm_qk_3D,
               test_qm_pk_3D,
               test_qm_pk_double,
#               test_spectral_1D,
#               test_spectral_2D,
               test_lag
               ] )

