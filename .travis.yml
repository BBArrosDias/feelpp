os:
  - linux

# force use of container based worker
sudo: false  

git:
  depth: 1
  submodules: false

language: cpp

compiler:
- clang

env:
- BUILD="llvm-3.5" FEELPP_CXX=clang++-3.5 FEELPP_CC=clang-3.5 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
#- BUILD="llvm-3.6" FEELPP_CXX=clang++-3.6 FEELPP_CC=clang-3.5 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
#- BUILD="llvm-3.7" FEELPP_CXX=clang++-3.7 FEELPP_CC=clang-3.5 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"
#- BUILD="llvm-3.4" FEELPP_CXX=clang++-3.4 FEELPP_CC=clang-3.4 BUILDTYPE=Release TARGET=quickstart CXXFLAGS="-O2 -DNDEBUG"

#- BUILD="g-debug" BUILDTYPE=Debug
#- BUILDTYPE=Release TARGET=tutorial

addons:
  apt:
    packages:
    - cmake
    - libtbb-dev
    - libboost-all-dev 
    - libboost-mpi-dev
    - clang-3.5
#    - clang-3.6
#    - clang-3.7
    - libglpk-dev
    - libxml2-dev
    - bison
    - flex
    - doxygen
    - imagemagick


before_install:
- echo $TRAVIS_OS_NAME
- echo $HOME
- if test "x$TRAVIS_OS_NAME" = "xlinux"; then export CXX=$FEELPP_CXX; fi
- if test "x$TRAVIS_OS_NAME" = "xlinux"; then export CC=$FEELPP_CC; fi

#- if test "x$TRAVIS_OS_NAME" = "xosx"; then cd /usr/local && git remote add feelpp https://github.com/feelpp/homebrew.git && git pull feelpp master; fi
#- if test "x$TRAVIS_OS_NAME" = "xosx"; then brew tap feelpp/science; fi
#- if test "x$TRAVIS_OS_NAME" = "xosx"; then ls /usr/local/Cellar; fi
#- if test "x$TRAVIS_OS_NAME" = "xosx"; then brew install open-mpi; fi
#- if test "x$TRAVIS_OS_NAME" = "xosx"; then brew install --only-dependencies feelpp; fi
#install some submodules
- git submodule update --init --recursive contrib/nlopt
#- git submodule update --init --recursive contrib/nt2
- git submodule update --init --recursive contrib/ipopt
- git submodule update --init --recursive quickstart


install:
- mkdir opt-$BUILD && cd opt-$BUILD && ../configure --build=$BUILDTYPE -v --cxxflags="$CXXFLAGS"

script:
- make -j16 feelpp_ginac
- make -j2 feelpp
#- if ! test "x$TARGET" = "x"; then make $TARGET-check; fi

branches:
  only:
  - develop
  - master
cache:
- apt
notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/cf3f3fee0056f865adb2
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false


matrix:
  allow_failures:
  - gcc
  - osx
