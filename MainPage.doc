/* -*- mode: c++; coding: utf-8 -*- */

namespace Feel
{
/*! \mainpage Introduction


\feel is a unified C++ implementation of Galerkin methods (finite and spectral element methods) in 1D, 2D And 3D to solve partial differential equations.

<hr>
The objectives of this framework is quite ambitious; ambitions which
could be express in various ways such as :

 \li the creation of a versatile mathematical kernel solving easily
 problems using different techniques thus allowing testing and
 comparing methods, e.g. cG versus dG,

 \li the creation of a '''small''' and '''manageable''' library which
 shall nevertheless encompass a wide range of numerical methods and
 techniques,

 \li build mathematical software that follows closely the mathematical
 abstractions associated with partial differential equations
 (PDE)(which is often not the case, for example the design
 could be physics oriented)

 \li the creation of a library entirely in ''C++'' allowing to create
 ''C++'' complex and typically multi-physics applications such as
 fluid-structure interaction or mass transport in
 haemodynamics (the rationale being that these applications
 are computing intensive and the use of an interpreted language such
 as python would not be satisfying though in many simpler cases that
 would simplify and accelerate the development.)



Feel was initially developed at École Polytechnique Fédérale de Lausanne(Suisse)
and is now a joint effort between Université de Strasbourg, Université Joseph
Fourier (Grenoble), University of Coimbra (Portugal) and CNRS.

See the Credits.org file for proper credits attribution.

<hr>

\htmlonly
<center>
<a href="http://creativecommons.org/licenses/LGPL/2.1/"><img alt="CC-GNU LGPL" border="0" src="http://creativecommons.org/images/public/cc-LGPL-a.png" /></a>
</center>
\endhtmlonly

*/
}
