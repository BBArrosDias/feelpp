/* -*- mode: c++; coding: utf-8 -*- */
namespace Feel {
/*! \page GettingStarted Getting started

\tableofcontents

\li \b Next: \ref CreatingApplications

\section build Building Feel

\subsection GettingSourceViaArchive Getting the source via an archive

Feel is distributed as a tarball once in a while. The tarballs are available
at the <a href="http://ljkforge.imag.fr/feel">Feel web site</a>.

Download the latest tarball. Then follow the steps and replace
\texttt{x},\texttt{y},\texttt{z} with the corresponding numbers

\code
  tar xzf feel-x.y.z.tar.gz
  cd feel-x.y.z
\endcode


\subsection GettingSourceViaSubversion Getting the source via Subversion

\par CreationRSAKey Creating RSA keys

In order to download the sources of Feel, you have to go in <a
href="https://ljkforge.imag.fr">"LJKForge website"</a> and create an
account. After the administrator approval, you have to demand the rights to see
the project tree.

Then, you will have to create RSA keys to be able to connect to the server
using ssh. To do that you have to type the commands :
<tt>ssh-keygen -t dsa</tt> and <tt>ssh-keygen -t rsa</tt> to create
the keys. After that, you have to copy the <tt>id_dsa.pub</tt> and
<tt>id_rsa.pub</tt> files in the My Page > Account Maintenance > Edit SSH Keys
section of the LJKForge website. Those files are located in the <tt>~/.ssh/</tt>
folder of your computer. You will be able to connect to the server within an
hour.

\note
If you don't have the same login on your computer as on
LJKForge, you must add the commands
\verbatim
host ljkforge.imag.fr
  user <your_login_ljkforge>
\endverbatim
in the <tt> ~/.ssh/config </tt> file.

\subsubsection download-sources Downloading the sources

To be able to download the Feel sources, you need subversion and SSH > 1.xxx
installed on your computer. In a command prompt, go where you want Feel to be
downloaded and type the following command.
\verbatim
svn co svn+ssh://login@ljkforge.imag.fr/svn/feel/feel/trunk feel
\endverbatim
where \c login is your login name in the LJKForge plateform. Then, if
you want to download the feel-test sources type :
\verbatim
  cd feel/benchmarks
  svn co svn+ssh://login@ljkforge.imag.fr/svn/feel-test/feel-test/trunk validation
\endverbatim

\subsection AboutDependencies Dealing with software dependencies

In order to install Feel, you have to install many dependencies
before. Those libraries and programs are necessary for the
compilation and installation of the Feel librairies.

This is the list of all the librairies you must have installed on your
computer, and the \verb|*-dev| packages for some of them.

Here is the list of required packages:

 - g++ (>=4.4)
 - MPI : openmpi (preferred) or mpich
 - Boost (>=1.39)
 - Petsc (>=2.3.3)
 - Cmake (>=2.6)
 - Gmsh (Gmsh is a pre/post processing software for scientific computing available at <a href="http://www.geuz.org/gmsh">Gmsh Web Site</a>)
 - Libxml2


Here is the list of optional packages:

 - Eigen2
 - Superlu
 - Suitesparse(umfpack)
 - Metis: scoth with the metis interface (preferred), metis (non-free)
 - Trilinos (>=8.0.8)
 - Google perftools
 - Paraview\footnote{Paraview is a few parallel scientific data
    visualisation plateform, \url{http://www.paraview.org}}, this is
  not stricly required to run Feel programs but it is somehow
  necessary for visualisation
 - Python (>= 2.5) for the validation tools
 - Eigen2
 - TBB: Intel Thread Building Block
 - Octave headers to create octave bindings (oct files)
 - MAdLib: the Mesh Adaptation Library


Note that all these packages are available under Debian/GNU/Linux and
Ubuntu. They should be available

\subsection CompilingWithCmake Compiling Feel with the CMake

Feel build system supports
CMake\index{cmake}\footnote{\url{http://www.cmake.org}}. This should become the
preferred way to build Feel as it is much simpler and more powerful in many
ways than the autotools.

Feel, using CMake, can be built either in source and out of source and different
build type:

 - minsizerel : minimal size release
 - release release
 - debug : debug
 - none(default)


\par CMake In Source Build

This is not advised, yoiu should consider out source builds, see next paragraph.

Enter the source tree and type
\verbatim
  cmake .
  make
\endverbatim

To customize or change some build setting one can use the CMake curse interface
\ccmake
\verbatim
  ccmake . # configure and generate
  make
\endverbatim

\par  CMake Out Source Build

Create a build directory
\verbatim
  mkdir feel.opt
  cd feel.opt
  cmake <directory where the feel source are>
  # e.g cmake ../feel if feel.opt is at the same
  # directory level as feel
  make
\endverbatim

you can customize the build type:
\verbatim
  # Debug build type (-g...)
  cmake -D CMAKE_BUILD_TYPE=Debug
  # Release build type (-O3...)
  cmake -D CMAKE_BUILD_TYPE=Release
  ...
\endverbatim

\subsection CompilingTutorial Compiling the Feel tutorial

If the command <tt>make check</tt> has been run before the tutorial
should be already compiled and ready. The steps are as follows  to build the Feel tutorial
\verbatim
  cd opt/doc/tutorial
  make check
\endverbatim
Here is what the directory should look like
\verbatim
  cd opt/doc/tutorial
  ls

  laplacian     Makefile      myintegrals   mymesh       pngs/
  tutorial.blg  tutorial.out  tutorial.toc  laplacian.o  myapp
  myintegrals.o mymesh.o      stokes.assert tutorial.aux pdfs/ styles/
  stokes        stokes.o      tutorial.bbl  tutorial.log tutorial.pdf
\endverbatim


\section Libraries Namepaces and Libraries

Here is the list of namespaces

 - <tt>Feel</tt>
 - <tt>Feel::po</tt>
 - <tt>Feel::mpl</tt>
 - <tt>Feel::ublas</tt>
 - <tt>Feel::math</tt>
 - <tt>Feel::fem</tt>
 - <tt>Feel::vf</tt>


Here is the list of libraries

 - <tt>feel/feelcore</tt>
 - <tt>feel/feelalg</tt>
 - <tt>feel/feelpoly</tt>
 - <tt>feel/feeldiscr</tt>
 - <tt>feel/feelfilters</tt>
 - <tt>feel/feelvf</tt>


\li \b Next: \ref CreatingApplications


*/
}


